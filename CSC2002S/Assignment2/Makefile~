LIB = ../lib
SRCDIR = src/animationSkeletonCode
BINDIR = bin
TESTDIR = test
DOCDIR = doc

CLI = $(LIB)/cli/commons-cli-1.3.1.jar
ASM = $(LIB)/asm/asm-5.0.4.jar:$(LIB)/asm/asm-commons-5.0.4.jar:$(LIB)/asm/asm-tree-5.0.4.jar
JUNIT = $(LIB)/junit/junit-4.12.jar:$(LIB)/junit/hamcrest-core-1.3.jar
JACOCO = $(LIB)/jacoco/org.jacoco.core-0.7.5.201505241946.jar:$(LIB)/jacoco/org.jacoco.report-0.7.5.201505241946.jar:
TOOLS = $(LIB)/tools

JAVAC = javac
JFLAGS = -g -d $(BINDIR) -cp $(BINDIR):$(JUNIT)


vpath %.java $(SRCDIR) /GridBlock:$(SRCDIR)/Person:$(SRCDIR)/PeopleCounter:$(SRCDIR) /RoomGrid:$(SRCDIR)/PersonMover:$(SRCDIR)/RoomPanel:$(SRCDIR)/CounterDisplay:$(SRCDIR)/PartyApp :$(SRCDIR):$(TESTDIR)
vpath %.class $(BINDIR) /GridBlock:$(BINDIR) /Person:$(BINDIR)/PeopleCounter:$(BINDIR)/RoomGrid:$(BINDIR)/PersonMover:$(BINDIR) /RoomPanel:$(BINDIR)/CounterDisplay:$(BINDIR)/PartyApp:$(BINDIR)

# define general build rule for java sources
.SUFFIXES:  .java  .class

.java.class:
	$(JAVAC)  $(JFLAGS)  $<

#default rule - will be invoked by make


all: GridBlock.class Person.class PeopleCounter.class RoomGrid.class PersonMover.class RoomPanel.class CounterDisplay.class PartyApp.class

PartyApp.class:
	rm -rf $(BINDIR)/GridBlock.class $(BINDIR) /Person.class $(BINDIR) /PeopleCounter.class $(BINDIR) /RoomGrid.class $(BINDIR) /PersonMover.class $(BINDIR) /RoomPanel.class $(BINDIR)/CounterDisplay.class $(BINDIR)/PartyApp.class
	javac $(JFLAGS) $(SRCDIR)/GridBlock.java$(SRCDIR)/Person.java$(SRCDIR)/PeopleCounter.java $(SRCDIR)/RoomGrid.java:$(SRCDIR)/PersonMover.java $(SRCDIR)/RoomPanel.java $(SRCDIR)/CounterDisplay.java $(SRCDIR)/PartyApp.java
	
		
# Rules for generating documentation
doc:
	javadoc -d $(DOCDIR) $(SRCDIR)/*.java

# Rules for unit testing
# Add additional Testxx.class file to this line and to TestSuite.java
test_classes: all 
 
test: test_classes
	java -ea -cp $(BINDIR):$(JUNIT) org.junit.runner.JUnitCore 
	
# Rules for generating tests
jacoco.exec: test_classes
	java -ea -javaagent:$(LIB)/jacoco/jacocoagent.jar -cp $(BINDIR):$(JUNIT) org.junit.runner.JUnitCore 

report: jacoco.exec
	java -cp $(BINDIR):$(CLI):$(JACOCO):$(ASM):$(TOOLS) Report --reporttype html .

clean:
	@rm -f  $(BINDIR)/*.class
	@rm -f $(BINDIR)/*/*.class
	@rm -f jacoco.exec *.xml *.csv
	@rm -Rf coveragereport
	@rm -Rf doc
